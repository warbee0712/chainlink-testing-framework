name: Framework Docker Component Tests
on:
  push:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-framework
  cancel-in-progress: true
jobs:
  framework-component-tests:
    defaults:
      run:
        working-directory: framework
    env:
      CTF_JD_IMAGE: ${{ secrets.CTF_JD_IMAGE }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.PUBLIC_AWS_ECR_ROLE }}
          aws-region: us-east-1
      - name: Authenticate to ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public
      - name: Check for changes in Framework
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            src:
              - 'framework/**'
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.8
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-modules-${{ hashFiles('**/go.sum') }}-${{ runner.os }}-framework
          restore-keys: |
            go-modules-${{ hashFiles('**/go.sum') }}-${{ runner.os }}-framework
      - name: Install dependencies
        run: go mod download
      - name: Run Docker Component Tests
        if: steps.changes.outputs.src == 'true'
        run: |
          go test -timeout 2m -v -count 1 -run TestComponent ./...
